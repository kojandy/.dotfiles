[user]
name = "Ohjun Kwon"
email = "dev@kojandy.com"

[ui]
default-command = ["log", "-T builtin_log_compact"]
pager = "less -FRX"
diff-formatter = "difft"
merge-editor = "vimdiff"

[merge-tools.difft]
diff-args = ["--color=always", "$left", "$right"]

[merge-tools.vimdiff]
program = "nvim"

[merge-tools.idea]
program = "idea"
diff-args = ["diff",  "$left", "$right"]
edit-args = ["diff",  "$left", "$right"]
merge-args = ["merge" , "$left", "$right", "$base", "$output"]

[revsets]
log = "connected(present(@) | present(trunk()) | present(fork_point(@ | trunk()))) | ancestors(immutable_heads().., 2) | bookmarks() | fork_point(bookmarks()) | present(tracked_remote_bookmarks()::trunk())"

[revset-aliases]
'untracked_origin_log()' = 'present(trunk()) | present(ancestors(trunk()..untracked_remote_bookmarks(remote=origin), 2))'
'closest_bookmark(to)' = 'heads(::to & bookmarks())'

[templates]
log = "builtin_log_oneline"
log_node = '''
coalesce(
  if(!self, label("elided", "~")),
  if(root, "┴"),
  label(
    separate(" ",
      if(empty, "elided"),
      if(current_working_copy, "working_copy"),
      if(immutable, "immutable"),
      if(conflict, "conflict"),
    ),
    coalesce(
      if(current_working_copy, if(pushed, "!", "@")),
      if(description.lower().starts_with("wip"), if(pushed, "▲", "△")),
      if(conflict, "×"),
      if(pushed, "●", "○"),
    )
  )
)
'''

[template-aliases]
"pushed" = "self.contained_in('::remote_bookmarks()')"
"format_timestamp(timestamp)" = "timestamp.ago()"
'format_short_change_id(id)' = 'id.shortest(4)'
'format_short_commit_id(id)' = 'id.shortest(4)'
prompt = '''
separate(" ",
  format_short_change_id_with_hidden_and_divergent_info(self),
  format_short_commit_id(commit_id),
  if(empty, label("empty", "(empty)"), ""),
  if(description == "", label("description placeholder", "(no description)"), ""),
  if(description.contains("megamerge"), label("mega", "(mega)"), ""),
  if(description.starts_with("wip"), label("wip", "(wip)"), ""),
  if(description.starts_with("todo"), label("todo", "(todo)"), ""),
  if(description.starts_with("vibe"), label("vibe", "(vibe)"), ""),
  if(description.starts_with("mega"), label("mega", "(mega)"), ""),
  if(conflict, label("conflict", "(conflict)"), "")
)
'''

[git]
private-commits = "description(glob-i:'!*')"

[colors]
wip = "yellow"
todo = "blue"
vibe = "cyan"
mega = "red"
